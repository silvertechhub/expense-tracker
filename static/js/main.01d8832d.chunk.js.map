{"version":3,"sources":["context/TransactionContext.js","comps/AddTransaction.js","comps/Balance.js","comps/IncomeExpenses.js","comps/TrackerHeader.js","comps/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["TransactionsContext","createContext","TransactionsContextProvider","children","useState","transactions","setTransaction","Provider","value","addCreditDebit","reason","intAmount","generateId","Math","floor","random","texts","amount","id","deleteTransaction","filter","transaction","AddTransaction","useContext","setAmount","setReason","onSubmit","e","preventDefault","parseInt","type","required","placeholder","onChange","target","className","Balance","total","map","reduce","acc","toFixed","IncomeExpenses","amounts","income","item","expense","TrackerHeader","TransactionHistory","length","onClick","style","paddingTop","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01d8832d.chunk.js","sourcesContent":["import React, {createContext, useState} from \"react\";\r\n\r\n    \r\nexport const TransactionsContext = createContext();\r\n\r\n// providercomponent\r\nexport const TransactionsContextProvider = ({children}) => {\r\n    // initial state\r\n const [transactions, setTransaction] = useState([\r\n    \r\n])\r\n\r\n    const addCreditDebit = (reason, intAmount) =>{\r\n        const generateId = Math.floor(Math.random() * 100);\r\n        setTransaction([...transactions, {texts: reason, amount: intAmount, id:generateId}])\r\n\r\n    }\r\n    const deleteTransaction = (id) => {\r\n        setTransaction(transactions.filter(transaction => transaction.id !== id))\r\n    }\r\n    return(\r\n          <TransactionsContext.Provider value={{transactions, addCreditDebit, deleteTransaction}} >\r\n              {children}\r\n          </TransactionsContext.Provider>\r\n    )\r\n}\r\n\r\n","import React, {useState, useContext } from 'react';\r\nimport { TransactionsContext } from '../context/TransactionContext';\r\n\r\nexport default function AddTransaction() {\r\n    const { addCreditDebit} = useContext(TransactionsContext)\r\n    const [amount, setAmount] = useState(\"\")\r\n    const [reason, setReason] = useState(\"\")\r\n\r\n   \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const intAmount = parseInt(amount);\r\n        addCreditDebit(reason, intAmount);\r\n        setAmount(\"\");\r\n        setReason(\"\");\r\n        \r\n    }\r\n\r\n  return <div>\r\n      <h5>Add Transaction</h5>\r\n      <form onSubmit={handleSubmit}>\r\n          \r\n            <label>Amount</label>\r\n          <input type=\"number\" required value={amount} placeholder=\"Enter amount here\"\r\n           onChange={ (e) => setAmount(e.target.value)}/>\r\n          <label>Text</label>\r\n          <input type=\"text\" required value={reason} placeholder=\"Enter reason\"\r\n           onChange={(e) => setReason(e.target.value) }/> <br/>\r\n          <input type=\"submit\" className='add-btn'  value=\"Add transaction\" />  \r\n      </form>\r\n  </div>;\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { TransactionsContext } from '../context/TransactionContext';\r\n\r\nexport default function Balance() {\r\n  const {transactions} = useContext(TransactionsContext)\r\n  const allTransaction = transactions.map(transactions => transactions.amount);\r\n  const total = allTransaction.reduce((acc, amount) => {return acc += amount}, 0).toFixed(2)\r\n\r\n  return <div className='balance-div'>\r\n      <h4 className='balance-header'>Your Balance</h4>\r\n      <p className='balance'>${total}</p>\r\n  </div>;\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { TransactionsContext } from '../context/TransactionContext';\r\n\r\n\r\nexport default function IncomeExpenses() {\r\n  const {transactions} = useContext(TransactionsContext);\r\n  const amounts = transactions.map( transactions => transactions.amount);\r\n  const income = amounts\r\n  .filter(item => item > 0)\r\n  .reduce((acc, item) => (acc += item), 0)\r\n  .toFixed(2);\r\n\r\n  const expense = amounts\r\n  .filter(item => item < 0)\r\n  .reduce((acc, item) => (acc += item), 0)\r\n  .toFixed(2);\r\n\r\n    \r\n  \r\n  return <div className='income-exp'>\r\n         <div>\r\n             <span className='income-exp-text'>Income</span><p>${income}</p>\r\n         </div>\r\n         <div className='divider'></div>\r\n         <div>\r\n             <span className='income-exp-text'>Expense</span> <p>${expense}</p>\r\n         </div>\r\n  </div>;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function TrackerHeader() {\r\n  return <div>\r\n      <h4 className='head'>Silver Expense Tracker</h4>\r\n  </div>;\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { TransactionsContext } from '../context/TransactionContext';\r\n\r\nexport default function TransactionHistory () {\r\n  const { transactions, deleteTransaction} = useContext(TransactionsContext);\r\n  // const allTransaction = transactions.map(transactions => transactions.amount);\r\n\r\n  \r\n  return transactions.length ? (<div>\r\n      <h5>Transaction History</h5>\r\n      <ul className='history' >\r\n          {transactions.map (transaction =>( \r\n          <li  key={transaction.id}>\r\n            <div  className={transaction.amount> 0 ? 'postive' : 'negative'}>\r\n            </div>\r\n             { transaction.texts +  `:` } {`$`+ transaction.amount} \r\n             <button onClick={() => deleteTransaction(transaction.id)} className='delete-btn'>X</button>\r\n          </li>))}\r\n          \r\n      </ul>\r\n  </div>) : (\r\n    <div style={{paddingTop: \"20px\"}}>\r\n      You don't have any transaction history\r\n    </div>\r\n  )\r\n}\r\n","import {React} from 'react';\nimport './App.css';\nimport AddTransaction from './comps/AddTransaction';\nimport Balance from './comps/Balance';\nimport IncomeExpenses from './comps/IncomeExpenses';\nimport TrackerHeader from './comps/TrackerHeader';\nimport TransactionHistory from './comps/TransactionHistory';\nimport { TransactionsContextProvider } from './context/TransactionContext';\n\n\n\nfunction App() {\n    \n  return (\n    <div className='container'>\n      <TransactionsContextProvider>\n        <TrackerHeader />\n        <Balance />\n        <IncomeExpenses />\n        <TransactionHistory />\n        <AddTransaction />\n     </TransactionsContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}